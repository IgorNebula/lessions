/* eslint-disable prefer-const */
/**
 * #### Recursive Types
 * Рекурсивные типы в TypeScript - это способ определить тип, который ссылается
 * сам.Рекурсивные типы используются для определения сложных структур данных, таких как
 * деревья или связанные списки, где значение может содержать одно или несколько значений
 * тот же тип.
 */
type LinkedList<T> = {
  value: T;
  next: LinkedList<T> | null;
};

let list: LinkedList<number> = {
  value: 1,
  next: { value: 2, next: { value: 3, next: null } },
};

const ls: number = list.next?.value;
// В этом примере тип LinkedList определяется как тип, который расширяет T и содержит
// свойство следующего того же типа LinkedList <t>.Это позволяет нам создать связанный список
// где каждый узел содержит значение типа T и ссылку на следующий узел в списке.